!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CONFIG_SCULL_DEBUG	scull.c	14;"	d	file:
KERNELDIR	Makefile	/^	KERNELDIR ?= \/lib\/modules\/$(shell uname -r)\/build$/;"	m
LLS_CUR_POS	scull.c	/^	LLS_CUR_POS,$/;"	e	enum:SCULL_DEV_LLSEEK_CMD	file:
LLS_END_POS	scull.c	/^	LLS_END_POS,$/;"	e	enum:SCULL_DEV_LLSEEK_CMD	file:
LLS_SET_POS	scull.c	/^	LLS_SET_POS = 0,$/;"	e	enum:SCULL_DEV_LLSEEK_CMD	file:
MEMDEV_MAJOR	backup/hello.c	17;"	d	file:
MEMDEV_MINOR	backup/hello.c	18;"	d	file:
MEMDEV_NR_DEVS	backup/hello.c	19;"	d	file:
MEMDEV_SIZE	backup/hello.c	20;"	d	file:
MEM_DEV_DEBUG	backup/hello.c	22;"	d	file:
PWD	Makefile	/^	PWD	:= $(shell pwd)$/;"	m
SCULL_DEVICE_TYPE	scull.c	/^enum SCULL_DEVICE_TYPE$/;"	g	file:
SCULL_DEV_DATA_MAX_SIZE	scull.c	44;"	d	file:
SCULL_DEV_LLSEEK_CMD	scull.c	/^enum SCULL_DEV_LLSEEK_CMD$/;"	g	file:
SCULL_DEV_NR	scull.c	43;"	d	file:
SCULL_MAJOR	scull.c	42;"	d	file:
SCULL_N	scull.c	/^	SCULL_N	= (0),$/;"	e	enum:SCULL_DEVICE_TYPE	file:
SCULL_R	scull.c	/^	SCULL_R = (1),$/;"	e	enum:SCULL_DEVICE_TYPE	file:
SCULL_W	scull.c	/^	SCULL_W = (2),$/;"	e	enum:SCULL_DEVICE_TYPE	file:
SCULL_WR	scull.c	/^	SCULL_WR = (3),$/;"	e	enum:SCULL_DEVICE_TYPE	file:
__this_module	scull.mod.c	/^__visible struct module __this_module$/;"	v	typeref:struct:module
__used	scull.mod.c	/^__used$/;"	v	file:
__used	scull.mod.c	/^__used$/;"	v	typeref:struct:____versions	file:
_scull_dev_free_cdev	scull.c	/^static void _scull_dev_free_cdev(struct scull_device *scull,int index)$/;"	f	file:
_scull_dev_free_data	scull.c	/^static int _scull_dev_free_data(struct scull_device *scull, int index)$/;"	f	file:
_scull_dev_setup_cdev	scull.c	/^static int _scull_dev_setup_cdev(struct scull_device *scull, int index)$/;"	f	file:
_scull_dev_setup_data	scull.c	/^static int _scull_dev_setup_data(struct scull_device *scull,int index)$/;"	f	file:
cat_log	setup.sh	/^cat_log()$/;"	f
data	backup/hello.c	/^	char *data;$/;"	m	struct:stu_mem_dev	file:
data	scull.c	/^	char *data;$/;"	m	struct:scull_data	file:
dev	scull.c	/^	struct cdev		dev;$/;"	m	struct:scull_device	typeref:struct:scull_device::cdev	file:
flag	scull.c	/^	int flag;$/;"	m	struct:scull_device	file:
fops	scull.c	/^	struct file_operations 	fops;$/;"	m	struct:scull_device	typeref:struct:scull_device::file_operations	file:
help	setup.sh	/^help()$/;"	f
label	scull.c	/^	char *label;$/;"	m	struct:scull_data	file:
lock	scull.c	/^	spinlock_t		lock;$/;"	m	struct:scull_device	file:
main	main.c	/^int main()$/;"	f
mem_cdev	backup/hello.c	/^struct cdev mem_cdev;$/;"	v	typeref:struct:cdev
mem_devp	backup/hello.c	/^struct stu_mem_dev *mem_devp;$/;"	v	typeref:struct:stu_mem_dev
mem_fops	backup/hello.c	/^struct file_operations mem_fops = $/;"	v	typeref:struct:file_operations
mem_llseek	backup/hello.c	/^static loff_t mem_llseek(struct file *filp,loff_t offset,int whence)$/;"	f	file:
mem_major	backup/hello.c	/^static int mem_major = MEMDEV_MAJOR;$/;"	v	file:
mem_minor	backup/hello.c	/^static int mem_minor = MEMDEV_MINOR;$/;"	v	file:
mem_name	backup/hello.c	/^static char *mem_name = "memdev";$/;"	v	file:
mem_nr_devs	backup/hello.c	/^static int mem_nr_devs = MEMDEV_NR_DEVS;$/;"	v	file:
mem_open	backup/hello.c	/^int mem_open(struct inode *inode,struct file *filp)$/;"	f
mem_read	backup/hello.c	/^static ssize_t mem_read(struct file *filp,char *buf,size_t size,loff_t *ppos)$/;"	f	file:
mem_release	backup/hello.c	/^int mem_release(struct inode *inode,struct file *filp)$/;"	f
mem_write	backup/hello.c	/^static ssize_t mem_write(struct file *filp,const char *buf,size_t size, loff_t *ppos)$/;"	f	file:
memdev_exit	backup/hello.c	/^module_exit(memdev_exit);$/;"	v
memdev_exit	backup/hello.c	/^static void memdev_exit(void)$/;"	f	file:
memdev_init	backup/hello.c	/^module_init(memdev_init);$/;"	v
memdev_init	backup/hello.c	/^static int memdev_init(void)$/;"	f	file:
mod_name	Makefile	/^mod_name=scull$/;"	m
obj-m	Makefile	/^	obj-m := ${mod_name}.o$/;"	m
print_dev	setup.sh	/^print_dev()$/;"	f
print_mod	setup.sh	/^print_mod()$/;"	f
printf	backup/hello.c	25;"	d	file:
rm_mod	setup.sh	/^rm_mod()$/;"	f
scu	scull.c	/^	struct scull_data 	*scu;$/;"	m	struct:scull_device	typeref:struct:scull_device::scull_data	file:
scull_data	scull.c	/^struct scull_data$/;"	s	file:
scull_dev	scull.c	/^struct scull_device scull_dev[SCULL_DEV_NR] = {$/;"	v	typeref:struct:scull_device
scull_dev_exit	scull.c	/^module_exit(scull_dev_exit);$/;"	v
scull_dev_exit	scull.c	/^static void __exit scull_dev_exit(void)$/;"	f	file:
scull_dev_init	scull.c	/^module_init(scull_dev_init);$/;"	v
scull_dev_init	scull.c	/^static int __init scull_dev_init(void)$/;"	f	file:
scull_device	scull.c	/^struct scull_device$/;"	s	file:
scull_llseek	scull.c	/^static loff_t scull_llseek(struct file *filp, loff_t offs, int cmd)$/;"	f	file:
scull_name_tab	scull.c	/^static const char *scull_name_tab[SCULL_DEV_NR] = {"scull0", "scull1"};$/;"	v	file:
scull_open	scull.c	/^static int scull_open(struct inode *node,struct file *filp)$/;"	f	file:
scull_read	scull.c	/^static ssize_t scull_read(struct file *filp, char __user *buf,$/;"	f	file:
scull_release	scull.c	/^static int scull_release(struct inode *node, struct file *filp)$/;"	f	file:
scull_write	scull.c	/^static ssize_t scull_write(struct file *filp, const char __user *data,$/;"	f	file:
setup_mod	setup.sh	/^setup_mod()$/;"	f
size	backup/hello.c	/^	unsigned long size;$/;"	m	struct:stu_mem_dev	file:
size	scull.c	/^	unsigned long size;$/;"	m	struct:scull_data	file:
stu_mem_dev	backup/hello.c	/^struct stu_mem_dev$/;"	s	file:
test_mod	setup.sh	/^test_mod()$/;"	f
tester_name	Makefile	/^tester_name="main"$/;"	m
tester_srcs	Makefile	/^tester_srcs="main.c"$/;"	m
type	scull.c	/^	int type;$/;"	m	struct:scull_device	file:
wqueue	scull.c	/^	wait_queue_head_t wqueue;$/;"	m	struct:scull_device	file:
